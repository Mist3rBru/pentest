import { assignData, enqueue } from '../utils'
import {
  getBinaryEdgeSubdomainList,
  getRdap,
  getSecurityTrailsSubdomainList,
} from './apis'
import {
  getAssetFinderSubdomainList,
  getGithubSubdomainList,
  getSubFinderSubdomainList,
} from './tools'

export async function informationGathering(domain: string): Promise<string[]> {
  const apiSubdomains = await Promise.all([
    getSecurityTrailsSubdomainList(domain),
    getBinaryEdgeSubdomainList(domain),
    getAssetFinderSubdomainList(domain),
    getSubFinderSubdomainList(domain),
    getGithubSubdomainList(domain),
  ])

  const subdomainList = new Set(apiSubdomains.flat())

  await enqueue(
    Array.from(subdomainList).map(subdomain => async () => {
      const data = await getRdap(subdomain)
      if (data) {
        assignData(subdomain, data)
      } else {
        subdomainList.delete(subdomain)
        process.stdout.write(`${subdomain}: rdap failed\n`)
      }
    })
  )

  return Array.from(subdomainList)
}
