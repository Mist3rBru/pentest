import {
  getBinaryEdgeSubdomainList,
  getRdap,
  getSecurityTrailsSubdomainList
} from '../subdomain/apis'
import {
  getAssetFinderSubdomainList,
  getGithubSubdomainList,
  getSubFinderSubdomainList
} from '../subdomain/tools'
import { assignData, filterDuplicate } from '../utils'

export async function informationGathering(domain: string): Promise<string[]> {
  const apiSubdomains = await Promise.all([
    getSecurityTrailsSubdomainList(domain),
    getBinaryEdgeSubdomainList(domain),
    getAssetFinderSubdomainList(domain),
    getSubFinderSubdomainList(domain)
  ])
  const subdomainList = filterDuplicate(apiSubdomains.flat())

  assignData(domain, { subdomainList, isMainDomain: true })

  const githubSubdomainList = await getGithubSubdomainList(domain)
  const filteredSubdomains = filterDuplicate(
    subdomainList.concat(githubSubdomainList)
  )

  // for (const subdomain of filteredSubdomains) {
  //   const data = await getRdap(subdomain)
  //   if (data) {
  //     assignData(subdomain, data)
  //   }
  // }

  return subdomainList
}
