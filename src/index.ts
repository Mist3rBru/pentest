import 'dotenv/config'
import {
  getSecurityTrailsSubdomainList,
  getBinaryEdgeSubdomainList,
  getRdap
} from './api'
import {
  getAssetFinderSubdomainList,
  getGithubSubdomainList,
  getSubFinderSubdomainList
} from './tools'
import { filterDuplicate, writeFile } from './utils'

async function main(): Promise<void> {
  const domain = process.argv[2]

  const apiSubdomains = await Promise.all([
    getSecurityTrailsSubdomainList(domain),
    getBinaryEdgeSubdomainList(domain),
    getAssetFinderSubdomainList(domain),
    getSubFinderSubdomainList(domain)
  ])
  const subdomainList = filterDuplicate(apiSubdomains.flat())

  writeFile('subdomain.json', JSON.stringify(subdomainList))

  const githubSubdomainList = await getGithubSubdomainList(domain)
  const filteredSubdomains = filterDuplicate(
    subdomainList.concat(githubSubdomainList)
  )

  const result: Record<string, Record<string, unknown>> = {}
  for (const subdomain of filteredSubdomains) {
    const data = await getRdap(subdomain)
    if (data) {
      process.stdout.write(JSON.stringify({ subdomain, data }, null, 2) + '\n')
      result[subdomain] = data
    }
  }

  writeFile('subdomain-data.json', JSON.stringify(result))
}

main()
