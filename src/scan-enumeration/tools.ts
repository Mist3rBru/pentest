import { assignData, enqueue, exec, getData } from '../utils'
import axios from 'axios'

export async function serviceEnum(subdomainList: string[]): Promise<void> {
  const promiseList = subdomainList.map(subdomain => async () => {
    try {
      const url = `http://${subdomain}`
      const { status } = await axios.get(url, {
        timeout: 3000
      })
      assignData(subdomain, { isService: status >= 200 && status < 400 })
    } catch (err) {
      assignData(subdomain, { isService: false })
    }
  })

  return enqueue(promiseList)
}

export async function portEnum(subdomainList: string[]): Promise<void> {
  // `nmap -Pn -sV -f -n -T 3 --data-length 127 --randomize-hosts ${domain}`
  const promiseList = subdomainList.map(subdomain => async () => {
    if (getData(subdomain)?.isService === false) {
      return
    }
    const nmapResult = await exec(`nmap ${subdomain}`)
    const data = nmapResult
      .split('\n')
      .filter(line => line.includes('open'))
      .map(line => {
        const [port, protocol, state, service] = line.split(/[/\s]+/g)
        return { port: Number(port), protocol, service }
      })
    assignData(subdomain, { portList: data })
  })

  return enqueue(promiseList)
}
