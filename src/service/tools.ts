import { exec } from '../utils'
import axios from 'axios'

export async function serviceEnum(subdomainList: string[]): Promise<string[]> {
  const result: string[] = []

  for (const subdomain of subdomainList) {
    try {
      const url = `http://${subdomain}`
      const { status } = await axios.get(url, {
        timeout: 3000
      })
      if (status >= 200 && status < 400) {
        process.stdout.write(`service: ${url}\n`)
        result.push(url)
      }
    } catch (err) {}
  }
  return result
}

export type PortEnumResult = {
  [subdomain: string]: Array<{
    port: number
    protocol: string
    service: string
  }>
}

export async function portEnum(
  subdomainList: string[]
): Promise<PortEnumResult> {
  // `nmap -Pn -sV -f -n -T 3 --data-length 127 --randomize-hosts ${domain}`
  const result: PortEnumResult = {}

  for (const subdomain of subdomainList) {
    const nmapResult = await exec(`nmap ${subdomain}`)
    result[subdomain] = nmapResult
      .split('\n')
      .filter(line => line.includes('open'))
      .map(line => {
        const [port, protocol, state, service] = line.split(/[/\s]+/g)
        return { port: Number(port), protocol, service }
      })
  }

  return result
}
