import { createQueue } from './queue'

export function filterDuplicate(data: Iterable<string>): string[] {
  return Array.from(new Set(data))
}

export function prettify(data: Record<string, unknown>): string {
  return JSON.stringify(data, null, 2)
}

export const _data: Record<string, Record<string, unknown>> = {}
const dataQueue = createQueue(1)

export function assignData(
  subdomain: string,
  data: Record<string, unknown>
): void {
  dataQueue.add(async () => {
    process.stdout.write(prettify({ [subdomain]: data }) + '\n')
    _data[subdomain] ??= {}
    for (const [key, value] of Object.entries(data)) {
      _data[subdomain][key] = value
    }
  })
}

export function getData(subdomain: string): Record<string, unknown> {
  return _data[subdomain]
}
